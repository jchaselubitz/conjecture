create table "public"."profile" (
    "id" uuid not null,
    "created_at" timestamp with time zone not null default now(),
    "image_url" text,
    "name" text,
    "updated_at" timestamp with time zone not null default now()
);


alter table "public"."profile" enable row level security;

create table "public"."draft" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "creator_id" uuid,
    "title" text,
    "content" text,
    "header_img" text,
    "updated_at" timestamp with time zone default now(),
    "is_published" boolean not null default false,
    "statement_id" text not null default ''::text
);


alter table "public"."draft" enable row level security;

CREATE UNIQUE INDEX profile_pkey ON public.profile USING btree (id);

CREATE UNIQUE INDEX statement_pkey ON public.draft USING btree (id);

alter table "public"."profile" add constraint "profile_pkey" PRIMARY KEY using index "profile_pkey";

alter table "public"."draft" add constraint "statement_pkey" PRIMARY KEY using index "statement_pkey";

alter table "public"."profile" add constraint "profile_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."profile" validate constraint "profile_id_fkey";

alter table "public"."draft" add constraint "statement_creator_id_fkey" FOREIGN KEY (creator_id) REFERENCES auth.users(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;

alter table "public"."draft" validate constraint "statement_creator_id_fkey";

set check_function_bodies = off;


CREATE OR REPLACE FUNCTION public.handle_new_user()
 RETURNS trigger
 LANGUAGE plpgsql
 SECURITY DEFINER
AS $function$
begin
  insert into public.profile (id, name, image_url)
  values (new.id, new.raw_user_meta_data ->> 'email', new.raw_user_meta_data ->> 'picture');
  return new;
end;
$function$
;

CREATE OR REPLACE FUNCTION public.update_timestamp()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  SET search_path TO public;
  NEW.updated_at = now();
  RETURN NEW;
END;
$function$
;

grant delete on table "public"."profile" to "anon";

grant insert on table "public"."profile" to "anon";

grant references on table "public"."profile" to "anon";

grant select on table "public"."profile" to "anon";

grant trigger on table "public"."profile" to "anon";

grant truncate on table "public"."profile" to "anon";

grant update on table "public"."profile" to "anon";

grant delete on table "public"."profile" to "authenticated";

grant insert on table "public"."profile" to "authenticated";

grant references on table "public"."profile" to "authenticated";

grant select on table "public"."profile" to "authenticated";

grant trigger on table "public"."profile" to "authenticated";

grant truncate on table "public"."profile" to "authenticated";

grant update on table "public"."profile" to "authenticated";

grant delete on table "public"."profile" to "service_role";

grant insert on table "public"."profile" to "service_role";

grant references on table "public"."profile" to "service_role";

grant select on table "public"."profile" to "service_role";

grant trigger on table "public"."profile" to "service_role";

grant truncate on table "public"."profile" to "service_role";

grant update on table "public"."profile" to "service_role";

grant insert on table "public"."profile" to "supabase_auth_admin";

grant delete on table "public"."draft" to "anon";

grant insert on table "public"."draft" to "anon";

grant references on table "public"."draft" to "anon";

grant select on table "public"."draft" to "anon";

grant trigger on table "public"."draft" to "anon";

grant truncate on table "public"."draft" to "anon";

grant update on table "public"."draft" to "anon";

grant delete on table "public"."draft" to "authenticated";

grant insert on table "public"."draft" to "authenticated";

grant references on table "public"."draft" to "authenticated";

grant select on table "public"."draft" to "authenticated";

grant trigger on table "public"."draft" to "authenticated";

grant truncate on table "public"."draft" to "authenticated";

grant update on table "public"."draft" to "authenticated";

grant delete on table "public"."draft" to "service_role";

grant insert on table "public"."draft" to "service_role";

grant references on table "public"."draft" to "service_role";

grant select on table "public"."draft" to "service_role";

grant trigger on table "public"."draft" to "service_role";

grant truncate on table "public"."draft" to "service_role";

grant update on table "public"."draft" to "service_role";

CREATE TRIGGER set_timestamp_profile BEFORE UPDATE ON public.profile FOR EACH ROW EXECUTE FUNCTION update_timestamp();


CREATE TRIGGER set_timestamp_statement BEFORE UPDATE ON public.draft FOR EACH ROW EXECUTE FUNCTION update_timestamp();


